# Generated by Django 2.2.13 on 2020-12-17 11:58
from django.db import migrations
from django.db.models import OuterRef, Subquery, F


def forward(apps, schema_editor):
    Partnership = apps.get_model('partnership', 'Partnership')
    PartnershipYear = apps.get_model('partnership', 'PartnershipYear')

    # Update missions
    model = Partnership.missions.rel.through
    create_list = []
    qs = PartnershipYear.missions.rel.through.objects.values_list(
        'partnershipyear__partnership_id',
        'partnershipmission_id',
    ).distinct('partnershipyear__partnership_id')
    for partnership_id, mission_id in qs:
        create_list.append(model(
            partnership_id=partnership_id,
            partnershipmission_id=mission_id,
        ))
    model.objects.bulk_create(create_list)

    # Update simple fields
    subquery = PartnershipYear.objects.filter(
        partnership=OuterRef('pk'),
    ).order_by('-academic_year__year')
    Partnership.objects.annotate(
        new_description=Subquery(subquery.values('description')[:1]),
        new_id_number=Subquery(subquery.values('id_number')[:1]),
        new_project_title=Subquery(subquery.values('project_title')[:1]),
        new_subtype_id=Subquery(subquery.values('subtype_id')[:1]),
        new_ucl_status=Subquery(subquery.values('ucl_status')[:1]),
    ).update(
        description=F('new_description'),
        id_number=F('new_id_number'),
        project_title=F('new_project_title'),
        subtype_id=F('new_subtype_id'),
        ucl_status=F('new_ucl_status'),
    )


def backward(apps, schema_editor):
    Partnership = apps.get_model('partnership', 'Partnership')
    PartnershipYear = apps.get_model('partnership', 'PartnershipYear')

    # Update missions
    model = PartnershipYear.missions.rel.through
    create_list = []
    qs = Partnership.missions.rel.through.objects.values_list(
        'partnership__years__pk',
        'partnershipmission_id',
    )
    for year_id, mission_id in qs:
        create_list.append(model(
            partnershipyear_id=year_id,
            partnershipmission_id=mission_id,
        ))
    model.objects.bulk_create(create_list)

    # Update simple fields
    subquery = Partnership.objects.filter(
        years__pk=OuterRef('pk'),
    )
    PartnershipYear.objects.annotate(
        old_description=Subquery(subquery.values('description')[:1]),
        old_id_number=Subquery(subquery.values('id_number')[:1]),
        old_project_title=Subquery(subquery.values('project_title')[:1]),
        old_subtype_id=Subquery(subquery.values('subtype_id')[:1]),
        old_ucl_status=Subquery(subquery.values('ucl_status')[:1]),
    ).update(
        description=F('old_description'),
        id_number=F('old_id_number'),
        project_title=F('old_project_title'),
        subtype_id=F('old_subtype_id'),
        ucl_status=F('old_ucl_status'),
    )


class Migration(migrations.Migration):
    dependencies = [
        ('partnership', '0079_add_non_yearly_fields'),
    ]

    operations = [
        migrations.RunPython(forward, backward, elidable=True),
    ]
